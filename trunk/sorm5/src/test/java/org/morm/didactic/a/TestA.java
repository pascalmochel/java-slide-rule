package org.morm.didactic.a;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.morm.datasource.HsqldbDataSourceFactory;
import org.morm.mapper.DataMapper;
import org.morm.record.Entity;
import org.morm.session.SessionFactory;
import org.morm.test.EntityTest2;

import static org.junit.Assert.*;
import static org.morm.criteria.Criteria.*;

public class TestA {

	static {
		new EntityTest2();
		new SessionFactory().setDataSource(new HsqldbDataSourceFactory().getDataSource());
	}

	@Test
	public void test() {

		SessionFactory.getSession().open();

		try {
			DataMapper.executeDDL("INSERT INTO CITY (ID_CITY,NAME) VALUES (100,'SBD')");
			DataMapper.executeDDL("INSERT INTO CITY (ID_CITY,NAME) VALUES (101,'TRS')");

			City sbd = Entity.loadUniqueBy(City.class, where(eq(City.name, "SBD")));
			assertEquals("[ID_CITY=100, NAME=SBD]", sbd.toString());

			sbd.setName("Sabadell");
			sbd.store();

			sbd = Entity.loadById(City.class, sbd.getId());
			assertEquals("[ID_CITY=100, NAME=Sabadell]", sbd.toString());

		} finally {
			SessionFactory.getSession().rollback();
		}
	}

	@Before
	public void before() {
		SessionFactory.getSession().open();

		DataMapper.executeDDLIgnoringErrors("DROP TABLE CITY");

		DataMapper.executeDDL(
		/**/"CREATE TABLE CITY (" +
		/**/"ID_CITY INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) PRIMARY KEY," +
		/**/"NAME VARCHAR(20)" +
		/**/")"
		/**/);
		SessionFactory.getSession().commit();
	}

	@After
	public void after() {
		SessionFactory.getSession().open();
		DataMapper.executeDDL("DROP TABLE CITY");
		SessionFactory.getSession().commit();
	}

}
