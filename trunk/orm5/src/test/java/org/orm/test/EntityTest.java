package org.orm.test;

import org.junit.Test;
import org.orm.datasource.HsqldbDataSourceFactory;
import org.orm.exception.OrmException;
import org.orm.mapper.DataMapper;
import org.orm.record.Entity;
import org.orm.session.SessionFactory;
import org.orm.test.ent.Rabbit;

import static org.junit.Assert.*;

public class EntityTest {

	static {
		new EntityTest2();
		SessionFactory.setDataSource(new HsqldbDataSourceFactory().getDataSource());
	}

	@Test
	public void testname() throws Exception {

		{
			SessionFactory.getSession().open();

			DataMapper.executeDDLIgnoringErrors("DROP TABLE RABBIT");
			DataMapper.executeDDLIgnoringErrors("DROP TABLE DOG");

			DataMapper.executeDDL(
			/**/"CREATE TABLE RABBIT (" +
			/**/"ID_RABBIT INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) PRIMARY KEY," +
			/**/"NAME VARCHAR(20)," +
			/**/"AGE INTEGER," +
			/**/"NUM_DOG INTEGER)"
			/**/);
			DataMapper.executeDDL(
			/**/"CREATE TABLE DOG (" +
			/**/"ID_DOG INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) PRIMARY KEY," +
			/**/"NAME VARCHAR(20)," +
			/**/"AGE INTEGER)"
			/**/);

		}
		{

			final Rabbit a = new Rabbit(null, "din", 9);
			a.store();

			System.out.println(a);

			try {
				Entity.loadById(Rabbit.class, 4);
				fail();
			} catch (final OrmException e2) {
				// no row produced
			}

			final Rabbit rabbit = Entity.loadById(Rabbit.class, 100);
			System.out.println(rabbit);

			rabbit.setName("jou");
			rabbit.store();

			System.out.println(Entity.loadById(Rabbit.class, 100));
			System.out.println(Entity.loadAll(Rabbit.class));

			// System.out.println(Entity.loadBy(Rabbit.class,
			// where(eq(Rabbit.id, 4))));
			// System.out.println(Entity.loadBy(Rabbit.class,
			// where(eq(Rabbit.id, 100))));
			// System.out.println(Entity.loadBy(Rabbit.class,
			// where(and(eq(Rabbit.id, 5), eq(Rabbit.name, "jou")))));
			//
			// System.out.println(
			// /**/Entity.loadBy(Rabbit.class, where(eq(Rabbit.id, 100)),
			// orderBy(Order.asc(Rabbit.name), Order
			// .asc(Rabbit.id)))
			// /**/);

			// System.out.println(Entity.count(Rabbit.class, where(eq(Rabbit.id,
			// 4))));
			// System.out.println(Entity.count(Rabbit.class, where(eq(Rabbit.id,
			// 100))));

			rabbit.delete();

			System.out.println(Entity.loadAll(Rabbit.class));

			System.out.println(a.getDog());

			{
				System.out.println("====================================");

				DataMapper.executeDDL("INSERT INTO DOG (ID_DOG,NAME,AGE) VALUES (500,'din',9)");
				DataMapper
						.executeDDL("INSERT INTO RABBIT (ID_RABBIT,NAME,AGE,NUM_DOG) VALUES (600,'cornill',5, 500)");

				final Rabbit r = Entity.loadById(Rabbit.class, 600);
				System.out.println(r);
				System.out.println(r.getDog());
				System.out.println(r);

			}

			SessionFactory.getSession().rollback();
		}
		{
			SessionFactory.getSession().open();
			DataMapper.executeDDL("DROP TABLE RABBIT");
			DataMapper.executeDDL("DROP TABLE DOG");
			SessionFactory.getSession().commit();
		}
	}
}
