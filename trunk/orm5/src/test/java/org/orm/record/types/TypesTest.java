package org.orm.record.types;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.orm.mapper.DataMapper;
import org.orm.record.Entity;
import org.orm.session.SessionFactory;
import org.orm.test.EntityTest2;

import static org.junit.Assert.*;

public class TypesTest {

	static {
		new EntityTest2();
	}

	@Before
	public void before() {
		SessionFactory.getSession().open();

		DataMapper.executeDDLIgnoringErrors("DROP TABLE PIZZA");

		DataMapper.executeDDL(
		/**/"CREATE TABLE PIZZA (" +
		/**/"ID_PIZZA INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) PRIMARY KEY," +
		/**/"T_SHORT SMALLINT," +
		/**/"T_DOUBLE FLOAT," +
		/**/"T_BOOL BOOLEAN," +
		/**/"T_BIGDEC NUMERIC," +
		/**/"T_DATE DATE," +
		/**/"T_TIME TIME," +
		/**/"T_TIMESTAMP TIMESTAMP" +
		/**/")"
		/**/);
		SessionFactory.getSession().commit();
	}

	@After
	public void after() {
		// TODO embolcallar amb trys els afters i chupant l'excepció. Si peta el
		// test, fa petar això i l'excepció original es perd
		try {
			SessionFactory.getSession().open();
			DataMapper.executeDDL("DROP TABLE PIZZA");
			SessionFactory.getSession().commit();
		} catch (final Exception e) {
			e.printStackTrace();
		}
	}

	@Test
	public void testInsertDogInsertRabbits() {

		SessionFactory.getSession().open();

		try {

			Pizza p = new Pizza();
			p.setId(null);
			p.setTShort((short) 1);
			p.setTDouble(2.1);
			p.setTBoolean(false);
			p.setTBigDec(new BigDecimal(12345L));
			p.setTDate(new Date(1L));
			p.setTTime(new Time(100000L));
			p.setTTimestamp(new Timestamp(10000000000L));

			p.store();

			SessionFactory.getSession().getIdentityMap().clear();

			p = Entity.loadById(Pizza.class, p.getId());

			assertEquals(
			/**/"[ID_PIZZA=100, T_SHORT=1, T_DOUBLE=2.1, T_BOOL=false, T_BIGDEC=12345, " +
			/**/"T_DATE=1970-01-01, T_TIME=01:01:40, T_TIMESTAMP=1970-04-26 18:46:40.0]"
			/**/, p.toString());

		} finally {
			SessionFactory.getSession().rollback();
		}
	}

}
