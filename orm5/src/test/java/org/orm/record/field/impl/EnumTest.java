package org.orm.record.field.impl;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.orm.criteria.Criteria;
import org.orm.datasource.HsqldbDataSourceFactory;
import org.orm.mapper.DataMapper;
import org.orm.session.SessionFactory;
import org.orm.test.EntityTest2;

import static org.junit.Assert.*;

public class EnumTest {

	static {
		new EntityTest2();
		SessionFactory.setDataSource(new HsqldbDataSourceFactory().getDataSource());
	}

	@Before
	public void before() {
		SessionFactory.getSession().open();

		DataMapper.executeDDLIgnoringErrors("DROP TABLE DOG");

		DataMapper.executeDDL(
		/**/"CREATE TABLE DOG (" +
		/**/"ID_DOG INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) PRIMARY KEY," +
		/**/"NAME VARCHAR(20)," +
		/**/"COLOR VARCHAR(20))"
		/**/);

		SessionFactory.getSession().commit();
	}

	@After
	public void after() {

		SessionFactory.getSession().open();
		DataMapper.executeDDL("DROP TABLE DOG");
		SessionFactory.getSession().commit();
	}

	@Test
	public void testname() throws Exception {
		SessionFactory.getSession().open();

		try {

			final EnumDog d = new EnumDog(null, "din", EColor.RED);
			d.store();
			assertEquals("[[ID_DOG=100, NAME=din, COLOR=RED]]", Criteria.selectAll().list(EnumDog.class)
					.toString());

			d.setColor(EColor.WHITE);
			d.store();

			SessionFactory.getSession().getIdCache().clear();

			final EnumDog d2 = Criteria.selectAll().firstResult(EnumDog.class);
			assertEquals("[ID_DOG=100, NAME=din, COLOR=WHITE]", d2.toString());

			assertTrue(EColor.WHITE == d2.getColor());

		} finally {
			SessionFactory.getSession().rollback();
		}
	}

}
